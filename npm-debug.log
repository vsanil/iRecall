0 info it worked if it ends with ok
1 verbose cli [ 'node', '/usr/local/bin/npm', 'update', '-g', 'cordova', 'ionic' ]
2 info using npm@1.4.7
3 info using node@v0.10.26
4 verbose node symlink /usr/local/bin/node
5 verbose url raw ionic
6 verbose url resolving [ 'https://registry.npmjs.org/', './ionic' ]
7 verbose url resolved https://registry.npmjs.org/ionic
8 info trying registry request attempt 1 at 23:14:09
9 verbose etag "C5NY1IUQDY8477F14OBJNCNGS"
10 http GET https://registry.npmjs.org/ionic
11 verbose url raw cordova
12 verbose url resolving [ 'https://registry.npmjs.org/', './cordova' ]
13 verbose url resolved https://registry.npmjs.org/cordova
14 info trying registry request attempt 1 at 23:14:12
15 verbose etag "EJZ72G6HFJUQ739FUR7NSCSS1"
16 http GET https://registry.npmjs.org/cordova
17 http 304 https://registry.npmjs.org/cordova
18 silly registry.get cb [ 304,
18 silly registry.get   { date: 'Tue, 23 Dec 2014 07:11:03 GMT',
18 silly registry.get     server: 'Apache',
18 silly registry.get     via: '1.1 varnish',
18 silly registry.get     'last-modified': 'Tue, 23 Dec 2014 07:11:03 GMT',
18 silly registry.get     'cache-control': 'max-age=60',
18 silly registry.get     etag: '"EJZ72G6HFJUQ739FUR7NSCSS1"',
18 silly registry.get     age: '20',
18 silly registry.get     'x-served-by': 'cache-lax1420-LAX',
18 silly registry.get     'x-cache': 'HIT',
18 silly registry.get     'x-cache-hits': '1',
18 silly registry.get     'x-timer': 'S1419318663.188480,VS0,VE2',
18 silly registry.get     vary: 'Accept',
18 silly registry.get     'content-length': '0',
18 silly registry.get     'keep-alive': 'timeout=10, max=50',
18 silly registry.get     connection: 'Keep-Alive' } ]
19 verbose etag cordova from cache
20 http 304 https://registry.npmjs.org/ionic
21 silly registry.get cb [ 304,
21 silly registry.get   { date: 'Tue, 23 Dec 2014 07:11:03 GMT',
21 silly registry.get     server: 'Apache',
21 silly registry.get     via: '1.1 varnish',
21 silly registry.get     'last-modified': 'Tue, 23 Dec 2014 07:11:03 GMT',
21 silly registry.get     'cache-control': 'max-age=60',
21 silly registry.get     etag: '"C5NY1IUQDY8477F14OBJNCNGS"',
21 silly registry.get     age: '0',
21 silly registry.get     'x-served-by': 'cache-lax1425-LAX',
21 silly registry.get     'x-cache': 'HIT',
21 silly registry.get     'x-cache-hits': '1',
21 silly registry.get     'x-timer': 'S1419318663.183324,VS0,VE41',
21 silly registry.get     vary: 'Accept',
21 silly registry.get     'content-length': '0',
21 silly registry.get     'keep-alive': 'timeout=10, max=50',
21 silly registry.get     connection: 'Keep-Alive' } ]
22 verbose etag ionic from cache
23 info outdated updating [ [ '/usr/local/lib',
23 info outdated     'ionic',
23 info outdated     '1.2.14-beta2',
23 info outdated     '1.2.14-beta2',
23 info outdated     '1.2.13',
23 info outdated     '*' ],
23 info outdated   [ '/usr/local/lib',
23 info outdated     'cordova',
23 info outdated     '3.6.3-0.2.13',
23 info outdated     '4.1.3-nightly.2014.10.21',
23 info outdated     '4.1.2',
23 info outdated     '*' ] ]
24 verbose install where,what [ '/usr/local/lib', [ 'ionic@1.2.14-beta2' ] ]
25 verbose install where,what [ '/usr/local/lib', [ 'cordova@4.1.3-nightly.2014.10.21' ] ]
26 verbose cache add [ 'ionic@1.2.14-beta2', null ]
27 verbose cache add name=undefined spec="ionic@1.2.14-beta2" args=["ionic@1.2.14-beta2",null]
28 verbose parsed url { protocol: null,
28 verbose parsed url   slashes: null,
28 verbose parsed url   auth: null,
28 verbose parsed url   host: null,
28 verbose parsed url   port: null,
28 verbose parsed url   hostname: null,
28 verbose parsed url   hash: null,
28 verbose parsed url   search: null,
28 verbose parsed url   query: null,
28 verbose parsed url   pathname: 'ionic@1.2.14-beta2',
28 verbose parsed url   path: 'ionic@1.2.14-beta2',
28 verbose parsed url   href: 'ionic@1.2.14-beta2' }
29 verbose cache add name="ionic" spec="1.2.14-beta2" args=["ionic","1.2.14-beta2"]
30 verbose parsed url { protocol: null,
30 verbose parsed url   slashes: null,
30 verbose parsed url   auth: null,
30 verbose parsed url   host: null,
30 verbose parsed url   port: null,
30 verbose parsed url   hostname: null,
30 verbose parsed url   hash: null,
30 verbose parsed url   search: null,
30 verbose parsed url   query: null,
30 verbose parsed url   pathname: '1.2.14-beta2',
30 verbose parsed url   path: '1.2.14-beta2',
30 verbose parsed url   href: '1.2.14-beta2' }
31 verbose addNamed [ 'ionic', '1.2.14-beta2' ]
32 verbose addNamed [ '1.2.14-beta2', '1.2.14-beta2' ]
33 verbose cache add [ 'cordova@4.1.3-nightly.2014.10.21', null ]
34 verbose cache add name=undefined spec="cordova@4.1.3-nightly.2014.10.21" args=["cordova@4.1.3-nightly.2014.10.21",null]
35 verbose parsed url { protocol: null,
35 verbose parsed url   slashes: null,
35 verbose parsed url   auth: null,
35 verbose parsed url   host: null,
35 verbose parsed url   port: null,
35 verbose parsed url   hostname: null,
35 verbose parsed url   hash: null,
35 verbose parsed url   search: null,
35 verbose parsed url   query: null,
35 verbose parsed url   pathname: 'cordova@4.1.3-nightly.2014.10.21',
35 verbose parsed url   path: 'cordova@4.1.3-nightly.2014.10.21',
35 verbose parsed url   href: 'cordova@4.1.3-nightly.2014.10.21' }
36 verbose cache add name="cordova" spec="4.1.3-nightly.2014.10.21" args=["cordova","4.1.3-nightly.2014.10.21"]
37 verbose parsed url { protocol: null,
37 verbose parsed url   slashes: null,
37 verbose parsed url   auth: null,
37 verbose parsed url   host: null,
37 verbose parsed url   port: null,
37 verbose parsed url   hostname: null,
37 verbose parsed url   hash: null,
37 verbose parsed url   search: null,
37 verbose parsed url   query: null,
37 verbose parsed url   pathname: '4.1.3-nightly.2014.10.21',
37 verbose parsed url   path: '4.1.3-nightly.2014.10.21',
37 verbose parsed url   href: '4.1.3-nightly.2014.10.21' }
38 verbose addNamed [ 'cordova', '4.1.3-nightly.2014.10.21' ]
39 verbose addNamed [ '4.1.3-nightly.2014.10.21', '4.1.3-nightly.2014.10.21' ]
40 silly lockFile bd6cf29f-ionic-1-2-14-beta2 ionic@1.2.14-beta2
41 verbose lock ionic@1.2.14-beta2 /Users/vasanthsanil/.npm/bd6cf29f-ionic-1-2-14-beta2.lock
42 silly lockFile 0a1287a3-cordova-4-1-3-nightly-2014-10-21 cordova@4.1.3-nightly.2014.10.21
43 verbose lock cordova@4.1.3-nightly.2014.10.21 /Users/vasanthsanil/.npm/0a1287a3-cordova-4-1-3-nightly-2014-10-21.lock
44 verbose url raw ionic
45 verbose url resolving [ 'https://registry.npmjs.org/', './ionic' ]
46 verbose url resolved https://registry.npmjs.org/ionic
47 info trying registry request attempt 1 at 23:14:42
48 verbose etag "C5NY1IUQDY8477F14OBJNCNGS"
49 http GET https://registry.npmjs.org/ionic
50 verbose url raw cordova
51 verbose url resolving [ 'https://registry.npmjs.org/', './cordova' ]
52 verbose url resolved https://registry.npmjs.org/cordova
53 info trying registry request attempt 1 at 23:14:42
54 verbose etag "EJZ72G6HFJUQ739FUR7NSCSS1"
55 http GET https://registry.npmjs.org/cordova
56 http 304 https://registry.npmjs.org/ionic
57 silly registry.get cb [ 304,
57 silly registry.get   { date: 'Tue, 23 Dec 2014 07:11:33 GMT',
57 silly registry.get     server: 'Apache',
57 silly registry.get     via: '1.1 varnish',
57 silly registry.get     'last-modified': 'Tue, 23 Dec 2014 07:11:33 GMT',
57 silly registry.get     'cache-control': 'max-age=60',
57 silly registry.get     etag: '"C5NY1IUQDY8477F14OBJNCNGS"',
57 silly registry.get     age: '30',
57 silly registry.get     'x-served-by': 'cache-lax1427-LAX',
57 silly registry.get     'x-cache': 'HIT',
57 silly registry.get     'x-cache-hits': '1',
57 silly registry.get     'x-timer': 'S1419318693.253209,VS0,VE0',
57 silly registry.get     vary: 'Accept',
57 silly registry.get     'content-length': '0',
57 silly registry.get     'keep-alive': 'timeout=10, max=50',
57 silly registry.get     connection: 'Keep-Alive' } ]
58 verbose etag ionic from cache
59 http 304 https://registry.npmjs.org/cordova
60 silly registry.get cb [ 304,
60 silly registry.get   { date: 'Tue, 23 Dec 2014 07:11:33 GMT',
60 silly registry.get     server: 'Apache',
60 silly registry.get     via: '1.1 varnish',
60 silly registry.get     'last-modified': 'Tue, 23 Dec 2014 07:11:03 GMT',
60 silly registry.get     'cache-control': 'max-age=60',
60 silly registry.get     etag: '"EJZ72G6HFJUQ739FUR7NSCSS1"',
60 silly registry.get     age: '50',
60 silly registry.get     'x-served-by': 'cache-lax1420-LAX',
60 silly registry.get     'x-cache': 'HIT',
60 silly registry.get     'x-cache-hits': '2',
60 silly registry.get     'x-timer': 'S1419318693.256160,VS0,VE0',
60 silly registry.get     vary: 'Accept',
60 silly registry.get     'content-length': '0',
60 silly registry.get     'keep-alive': 'timeout=10, max=50',
60 silly registry.get     connection: 'Keep-Alive' } ]
61 verbose etag cordova from cache
62 silly lockFile 0a1287a3-cordova-4-1-3-nightly-2014-10-21 cordova@4.1.3-nightly.2014.10.21
63 silly lockFile 0a1287a3-cordova-4-1-3-nightly-2014-10-21 cordova@4.1.3-nightly.2014.10.21
64 silly lockFile bd6cf29f-ionic-1-2-14-beta2 ionic@1.2.14-beta2
65 silly lockFile bd6cf29f-ionic-1-2-14-beta2 ionic@1.2.14-beta2
66 silly resolved [ { name: 'ionic',
66 silly resolved     version: '1.2.14-beta2',
66 silly resolved     preferGlobal: true,
66 silly resolved     description: 'A tool for creating and developing Ionic Framework mobile apps.',
66 silly resolved     homepage: 'http://ionicframework.com/',
66 silly resolved     bin: { ionic: 'bin/ionic' },
66 silly resolved     keywords:
66 silly resolved      [ 'ionic',
66 silly resolved        'ionic framework',
66 silly resolved        'ionicframework',
66 silly resolved        'mobile',
66 silly resolved        'app',
66 silly resolved        'hybrid',
66 silly resolved        'cordova',
66 silly resolved        'phonegap' ],
66 silly resolved     repository:
66 silly resolved      { type: 'git',
66 silly resolved        url: 'https://github.com/driftyco/ionic-cli.git' },
66 silly resolved     contributors: [ [Object], [Object], [Object], [Object] ],
66 silly resolved     license: 'MIT',
66 silly resolved     dependencies:
66 silly resolved      { archiver: '0.5.1',
66 silly resolved        colors: '0.6.2',
66 silly resolved        connect: '3.1.1',
66 silly resolved        'cross-spawn': '0.2.3',
66 silly resolved        'connect-livereload': '0.4.0',
66 silly resolved        'event-stream': '3.0.x',
66 silly resolved        finalhandler: '0.2.0',
66 silly resolved        'form-data': '0.1.4',
66 silly resolved        gulp: '3.8.8',
66 silly resolved        MD5: '1.2.1',
66 silly resolved        ncp: '0.4.2',
66 silly resolved        npm: '2.1.3',
66 silly resolved        open: '0.0.5',
66 silly resolved        optimist: '0.6.0',
66 silly resolved        prompt: '0.2.12',
66 silly resolved        progress: '1.1.7',
66 silly resolved        'proxy-middleware': '^0.7.0',
66 silly resolved        q: '1.0.1',
66 silly resolved        request: '2.51.0',
66 silly resolved        'serve-static': '1.7.1',
66 silly resolved        shelljs: '0.2.6',
66 silly resolved        'tiny-lr-fork': '0.0.5',
66 silly resolved        unzip: '0.1.9',
66 silly resolved        'vinyl-fs': '0.3.7',
66 silly resolved        xml2js: '0.4.4',
66 silly resolved        underscore: '~1.7.0' },
66 silly resolved     readme: 'Ionic-Cli\n=========\n\nThe Ionic Framework command line utility makes it easy to start, build, run, and emulate [Ionic](http://ionicframework.com/) apps. In the future, it will also have support for our mobile development services and tools that make Ionic even more powerful.\n\nUse the `ionic --help` command for more detailed task information.\n\n## Installing\n\n```bash\n$ npm install -g ionic\n```\n\n*Note: For a global install of `-g ionic`, OSX/Linux users may need to prefix the command with `sudo`.*\n\n\n## Starting an Ionic App\n\n```bash\n$ ionic start myapp [template]\n```\n\nStarter templates can either come from a named template, a Github repo, a Codepen, or a local directory. A starter template is what becomes the `www` directory within the Cordova project.\n\n__Named template starters:__\n\n* [tabs](https://github.com/driftyco/ionic-starter-tabs) (Default)\n* [sidemenu](https://github.com/driftyco/ionic-starter-sidemenu)\n* [blank](https://github.com/driftyco/ionic-starter-blank)\n\n__Github Repo starters:__\n\n* Any Github repo url, ex: [https://github.com/driftyco/ionic-starter-tabs](https://github.com/driftyco/ionic-starter-tabs)\n* Named templates are simply aliases to Ionic starter repos\n\n__Codepen URL starters:__\n\n* Any Codepen url, ex: [http://codepen.io/ionic/pen/odqCz](http://codepen.io/ionic/pen/odqCz)\n* [Ionic Codepen Demos](http://codepen.io/ionic/public-list/)\n\n__Local directory starters:__\n\n* Relative or absolute path to a local directory\n\n__Command-line flags/options:__\n\n    --appname, -a  .......  Human readable name for the app\n                            (Use quotes around the name)\n    --id, -i  ............  Package name set in the <widget id> config\n                            ex: com.mycompany.myapp\n    --no-cordova, -w  ....  Do not create an app targeted for Cordova\n\n\n## Testing in a Browser\n\nUse `ionic serve` to start a local development server for app dev and testing. This is useful for both desktop browser testing, and to test within a device browser which is connected to the same network. Additionally, this command starts LiveReload which is used to monitor changes in the file system. As soon as you save a file the browser is refreshed automatically. View [Using Sass](https://github.com/driftyco/ionic-cli/blob/master/README.md#using-sass) if you would also like to have `ionic serve` watch the project\'s Sass files.\n\n```bash\n$ ionic serve [options]\n```\n\n__Service Proxies:__\n\nThe `serve` command can add some proxies to the http server. These proxies are useful if you are developing in the browser and you need to make calls to an external API. With this feature you can proxy request to the external api through the ionic http server preventing the `No \'Access-Control-Allow-Origin\' header is present on the requested resource` error.\n\nIn the `ionic.project` file you can add a property with an array of proxies you want to add. The proxies are object with two properties:\n\n* `path`: string that will be matched against the beginning of the incoming request URL.\n* `proxyUrl`: a string with the url of where the proxied request should go.\n\n```json\n{\n  "name": "appname",\n  "email": "",\n  "app_id": "",\n  "proxies": [\n    {\n      "path": "/v1",\n      "proxyUrl": "https://api.instagram.com/v1"\n    }\n  ]\n}\n\n```\n\nUsing the above configuration, you can now make requests to your local server at `http://localhost:8100/v1` to have it proxy out requests to `https://api.instagram.com/v1`\n\nFor example:\n\n```js\nangular.module(\'starter.controllers\', [])\n.constant(\'InstagramApiUrl\', \'\')\n// .contant(\'InstagramApiUrl\',\'https://api.instagram.com\')\n//In production, make this the real URL\n\n.controller(\'FeedCtrl\', function($scope, $http, InstagramApiUrl) {\n\n  $scope.feed = null;\n\n  $http.get(InstagramApiUrl + \'/v1/media/search?client_id=1&lat=48&lng=2.294351\').then(function(data) {\n    console.log(\'data \' , data)\n    $scope.feed = data;\n  })\n\n})\n```\n\nSee also [this gist](https://gist.github.com/jbavari/d9c1c94058c4fdd4e935) for more help.\n\n__Command-line flags/options:__\n\n    [--consolelogs|-c] ......  Print app console logs to Ionic CLI\n    [--serverlogs|-s] .......  Print dev server logs to Ionic CLI\n    [--port|-p] .............  Dev server HTTP port (8100 default)\n    [--livereload-port|-i] ..  Live Reload port (35729 default)\n    [--nobrowser|-b] ........  Disable launching a browser\n    [--nolivereload|-r] .....  Do not start live reload\n    [--noproxy|-x] ..........  Do not add proxies\n\n\n## Adding a platform target\n\n```bash\n$ ionic platform ios android\n```\n\n## Building your app\n\n```bash\n$ ionic build ios\n```\n\n## Live Reload App During Development (beta)\n\nThe `run` or `emulate` command will deploy the app to the specified platform devices/emulators. You can also run __live reload__ on the specified platform device by adding the `--livereload` option. The live reload functionality is similar to `ionic serve`, but instead of developing and debugging an app using a standard browser, the compiled hybrid app itself is watching for any changes to its files and reloading the app when needed. This reduces the requirement to constantly rebuild the app for small changes. However, any changes to plugins will still require a full rebuild. For live reload to work, the dev machine and device must be on the same local network, and the device must support [web sockets](http://caniuse.com/websockets).\n\nWith live reload enabled, an app\'s console logs can also be printed to the terminal/command prompt by including the `--consolelogs` or `-c` option. Additionally, the development server\'s request logs can be printed out using `--serverlogs` or `-s` options.\n\n__Command-line flags/options for `run` and `emulate`:__\n\n    [--livereload|-l] .......  Live Reload app dev files from the device (beta)\n    [--consolelogs|-c] ......  Print app console logs to Ionic CLI (live reload req.)\n    [--serverlogs|-s] .......  Print dev server logs to Ionic CLI (live reload req.)\n    [--port|-p] .............  Dev server HTTP port (8100 default, live reload req.)\n    [--livereload-port|-i] ..  Live Reload port (35729 default, live reload req.)\n    [--debug|--release]\n\nWhile the server is running for live reload, you can use the following commands within the CLI:\n\n    restart or r to restart the client app from the root\n    goto or g and a url to have the app navigate to the given url\n    consolelogs or c to enable/disable console log output\n    serverlogs or s to enable/disable server log output\n    quit or q to shutdown the server and exit\n\n\n## Emulating your app\n\nDeploys the Ionic app on specified platform emulator. This is simply an alias for `run --emulator`.\n\n```bash\n$ ionic emulate ios [options]\n```\n\n\n## Running your app\n\nDeploys the Ionic app on specified platform devices. If a device is not found it\'ll then deploy to an emulator/simulator.\n\n```bash\n$ ionic run ios [options]\n```\n\n## Icon and splash screen image generation\n\nAutomatically generate icons and splash screens from a source file to create each size needed for each platform, along with placing each resized and cropped image into their platform directories. Image source files can either be a `png` or `psd` Photoshop file. Source images are sent to Ionic\'s image resizing and cropping server, instead of requiring special libraries and plugins to be installed locally.\n\nSince each platform has different image requirements, it\'s best to make your source file at the largest size needed, and let the tool do all the resizing, cropping and copying for you. Newly generated images will be placed in the `resources` directory at the root of the Cordova project. Additionally, the tool will update and add the correct `<platform>` configs to the project\'s [config.xml](http://cordova.apache.org/docs/en/edge/config_ref_images.md.html#Icons%20and%20Splash%20Screens) file.\n\nDuring the build process, Cordova will look through the project\'s [config.xml](http://cordova.apache.org/docs/en/edge/config_ref_images.md.html#Icons%20and%20Splash%20Screens) file and copy the newly created resource images to the platform\'s specific resource folder. For example, Android\'s resource folder can be found in `platforms/android/res`, and iOS uses `platforms/ios/APP_NAME/Resources`.\n\n\n### Icon Source Image\n\nSave an `icon.png` or `icon.psd` file within the `resources` directory at the root of the Cordova project. The file\'s minimum dimensions should be 1024x1024, and should have __no__ rounded corners. Note that each platform will apply it\'s own mask and effects to the icons. For example, iOS will automatically apply it\'s custom rounded corners, so the source file should not already have them.\n\n```bash\n$ ionic resources --icon\n```\n\n### Splash Screen Source Image\n\nSave a `splash.png` or `splash.psd` file within the `resources` directory at the root of the Cordova project. Splash screen dimensions vary for each platform, device and orientation, so square source image is required the generate each of them. The source image\'s minimum dimensions should be 2208x2208, and its artwork should be centered within the square knowning each image will center crop landscape and portait rectangles. The splash screen\'s artwork should roughly fit within the center 1000x1000 pixels.\n\n```bash\n$ ionic resources --splash\n```\n\n### Generating Icons and Splash Screens\n\nTo generate both icons and splash screens, follow the instructions above and run:\n\n```bash\n$ ionic resources\n```\n\n### Platform Specific Resource Images\n\nOne source file can be used to generate images for each platform by placing the file within the `resources` directory, such as `resources/icon.png`. To use different source images for individual platforms, place the source file in the respective platform\'s directory. For example, to use a different icon for Android, it should follow this path: `resources/android/icon.png`.\n\n\n## Update Ionic lib\n\nUpdate Ionic library files, which are found in the `www/lib/ionic` directory. If bower is being used\nby the project, this command will automatically run `bower update ionic`, otherwise this command updates\nthe local static files from Ionic\'s CDN.\n\n```bash\n$ ionic lib update\n```\n*Note: Using bower? This command does not update Ionic\'s dependencies. Run `bower update` to update Ionic and all of it\'s dependencies defined in `bower.json`.*\n\n## Packaging an app (beta)\n\nUsing Ionic\'s service, you can compile and package your project into an app-store ready app without\nrequiring native SDKs on your machine.\n\n```bash\n$ ionic package debug android\n```\n\nThe third argument can be either `debug` or `release`, and the last argument can be either `android` or `ios`.\n\n\n## Cordova Commands\n\nIonic uses Cordova underneath, so you can also substitute Cordova commands to prepare/build/emulate/run, or to add additional plugins.\n\n*Note: we occasionally send anonymous usage statistics to the Ionic team to make the tool better.*\n\n## Working around proxies\n\nIf you have a proxy you need to get around, you can pass that proxy with the default `http_proxy` [node environment variable](https://www.npmjs.org/doc/misc/npm-config.html#proxy) or an environment variable `proxy`.\n\nA few ways to set up and use the environment variable:\n\n```bash\nexport http_proxy=internal.proxy.com\n# Or\nexport PROXY=internal.proxy.com\n\nionic start my_app\n\n# Additionally, pass in line\nPROXY=internal.proxy.com ionic start my_app\n```\n\n\n## Using Sass\n\nBy default, starter projects are hooked up to Ionic\'s precompiled CSS file, which is found in the project\'s `www/lib/ionic/css` directory, and is linked to the app in the head of the root `index.html` file. However, Ionic projects can also be customized using [Sass](http://sass-lang.com/), which gives developers and designers "superpowers" in terms of creating and maintaining CSS. Below are two ways to setup Sass for your Ionic project (the `ionic setup sass` command simply does the manual steps for you). Once Sass has been setup for your Ionic project, then the `ionic serve` command will also watch for Sass changes.\n\n#### Setup Sass Automatically\n\n    ionic setup sass\n\n\n#### Setup Sass Manually\n\n1. Run `npm install` from the working directory of an Ionic project. This will install [gulp.js](http://gulpjs.com/) and a few handy tasks, such as [gulp-sass](https://www.npmjs.org/package/gulp-sass) and [gulp-minify-css](https://www.npmjs.org/package/gulp-minify-css).\n2. Remove `<link href="lib/ionic/css/ionic.css" rel="stylesheet">` from the `<head>` of the root `index.html` file.\n3. Remove `<link href="css/style.css" rel="stylesheet">` from the `<head>` of the root `index.html` file.\n4. Add `<link href="css/ionic.app.css" rel="stylesheet">` to the `<head>` of the root `index.html` file.\n5. In the `ionic.project` file, add the JavaScript property `"gulpStartupTasks": ["sass", "watch"]` (this can also be customized to whatever gulp tasks you\'d like).\n',
66 silly resolved     readmeFilename: 'README.md',
66 silly resolved     bugs: { url: 'https://github.com/driftyco/ionic-cli/issues' },
66 silly resolved     _id: 'ionic@1.2.14-beta2',
66 silly resolved     _shasum: '08582145ebcadd0cdf90488d7fc0a3854973b1e6',
66 silly resolved     _from: 'ionic@1.2.14-beta2',
66 silly resolved     _resolved: 'https://registry.npmjs.org/ionic/-/ionic-1.2.14-beta2.tgz' } ]
67 info install ionic@1.2.14-beta2 into /usr/local/lib
68 info installOne ionic@1.2.14-beta2
69 info /usr/local/lib/node_modules/ionic unbuild
70 silly resolved [ { name: 'cordova',
70 silly resolved     version: '4.1.3-nightly.2014.10.21',
70 silly resolved     preferGlobal: 'true',
70 silly resolved     description: 'Cordova command line interface tool',
70 silly resolved     main: 'cordova',
70 silly resolved     engines: { node: '>=0.9.9' },
70 silly resolved     engineStrict: true,
70 silly resolved     bin: { cordova: './bin/cordova' },
70 silly resolved     scripts: { test: 'jasmine-node --captureExceptions --color spec' },
70 silly resolved     repository:
70 silly resolved      { type: 'git',
70 silly resolved        url: 'https://git-wip-us.apache.org/repos/asf/cordova-cli.git' },
70 silly resolved     bugs:
70 silly resolved      { url: 'https://issues.apache.org/jira/browse/CB',
70 silly resolved        email: 'dev@cordova.apache.org' },
70 silly resolved     keywords: [ 'cordova', 'client', 'cli' ],
70 silly resolved     dependencies:
70 silly resolved      { 'cordova-lib': '4.1.3-nightly.2014.10.21',
70 silly resolved        q: '1.0.1',
70 silly resolved        nopt: '3.0.1',
70 silly resolved        underscore: '1.7.0' },
70 silly resolved     devDependencies: { 'jasmine-node': '1.14.5' },
70 silly resolved     author: { name: 'Anis Kadri' },
70 silly resolved     contributors:
70 silly resolved      [ [Object],
70 silly resolved        [Object],
70 silly resolved        [Object],
70 silly resolved        [Object],
70 silly resolved        [Object],
70 silly resolved        [Object],
70 silly resolved        [Object],
70 silly resolved        [Object],
70 silly resolved        [Object],
70 silly resolved        [Object],
70 silly resolved        [Object],
70 silly resolved        [Object],
70 silly resolved        [Object],
70 silly resolved        [Object],
70 silly resolved        [Object],
70 silly resolved        [Object],
70 silly resolved        [Object],
70 silly resolved        [Object],
70 silly resolved        [Object],
70 silly resolved        [Object],
70 silly resolved        [Object],
70 silly resolved        [Object],
70 silly resolved        [Object],
70 silly resolved        [Object] ],
70 silly resolved     license: 'Apache version 2.0',
70 silly resolved     readme: '<!--\n#\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# "License"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n# http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n#  KIND, either express or implied.  See the License for the\n# specific language governing permissions and limitations\n# under the License.\n#\n-->\n\n# cordova-cli\n\n> The command line tool to build, deploy and manage [Cordova](http://cordova.io)-based applications.\n\n[Apache Cordova](http://cordova.io) allows for building native mobile applications using HTML, CSS and JavaScript. This tool helps with management of multi-platform Cordova applications as well as Cordova plugin integration.\n\nCheck out the [Getting Started guides](http://cordova.apache.org/docs/en/edge/) for more details on how to work with Cordova sub-projects.\n\n# Supported Cordova Platforms\n\n- Amazon Fire OS\n- Android\n- BlackBerry 10\n- iOS\n- Ubuntu\n- Windows Phone 8\n- Windows 8\n\n# Requirements\n\n* [Node.js](http://nodejs.org/)\n* SDKs for each platform you wish to support:\n  - **Android**: [Android SDK](http://developer.android.com) - **NOTE** This tool\n    will not work unless you have the absolute latest updates for all\n    Android SDK components. Also you will need the SDK\'s `tools` and `platform-tools` directories on your __system path__ otherwise Android support will fail.\n  - **amazon-fireos**: [Amazon Fire OS SDK](https://developer.amazon.com/public/solutions/platforms/android-fireos/docs/building-and-testing-your-hybrid-app) - **NOTE** This tool will not work unless you have Android SDK installed and paths are updated as mentioned above. In addition you need to install AmazonWebView SDK and copy awv_interface.jar on **Mac/Linux** system to ~/.cordova/lib/commonlibs folder or on **Windows** %USERPROFILE%/.cordova/lib/coomonlibs. If commonlibs folder does not exist then create one.\n  - [Windows Phone SDK](http://dev.windowsphone.com/en-us/downloadsdk) - **NOTE** This tool will not work unless you have `msbuild` on your __system path__ otherwise Windows Phone support will fail (`msbuild.exe` is generally located in `C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319`).\n  - **BlackBerry 10**: [BlackBerry 10 WebWorks SDK](http://developer.blackberry.com/html5/download/). Make sure you have the `dependencies/tools/bin` folder inside the SDK directory added to your path!\n  - **iOS**: [iOS SDK](http://developer.apple.com) with the latest `Xcode` and `Xcode Command Line Tools`\n  - **Windows Phone**: [Windows Phone SDK](http://dev.windowsphone.com/en-us/downloadsdk) - **NOTE** This tool will not work unless you have `msbuild` on your __system path__ otherwise Windows Phone support will fail (`msbuild.exe` is generally located in `C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319`).\n\n`cordova-cli` has been tested on **Mac OS X**, **Linux**, **Windows 7**, and **Windows 8**.\n\nPlease note that some platforms have OS restrictions.  For example, you cannot build for Windows 8 or Windows Phone 8 on Mac OS X, nor can you build for iOS on Windows.\n\n# Install\n\nUbuntu packages are available in a PPA for Ubuntu 13.10 (Saucy) (the current release) as well as 14.04 (Trusty) (under development).\n\n    sudo apt-add-repository ppa:cordova-ubuntu/ppa\n    sudo apt-get update\n    sudo apt-get install cordova-cli\n    npm install -g cordova\n\nTo build an application for the Ubuntu platform, the following extra packages are required:\n\n    sudo apt-get install cmake debhelper libx11-dev libicu-dev pkg-config qtbase5-dev qtchooser qtdeclarative5-dev qtfeedback5-dev qtlocation5-dev qtmultimedia5-dev qtpim5-dev qtsensors5-dev qtsystems5-dev\n\n\n## Installing from master\n\nYou\'ll need to install both [CLI](https://git-wip-us.apache.org/repos/asf/cordova-cli.git) and [Plugman](https://git-wip-us.apache.org/repos/asf/cordova-plugman.git) from `git`. Running the *npm version* of one and *(git) master version* of the other is likely to end with you suffering.\n\nTo avoid using sudo, see [Get away from sudo: npm without root](http://justjs.com/posts/npm-link-developing-your-own-npm-modules-without-tears).\n\nRun the following commands:\n\n    git clone https://git-wip-us.apache.org/repos/asf/cordova-plugman.git\n    cd cordova-plugman\n    npm install\n    sudo npm link\n    cd ..\n    git clone https://git-wip-us.apache.org/repos/asf/cordova-cli.git\n    cd cordova-cli\n    npm install\n    sudo npm link\n    npm link plugman\n\nNow the `cordova` and `plugman` in your path are the local git versions. Don\'t forget to keep them up to date!\n\n## Installing on Ubuntu\n\n    apt-get install cordova-cli\n\n\n# Getting Started\n\n`cordova-cli` has a single global `create` command that creates new cordova projects into a specified directory. Once you create a project, `cd` into it and you can execute a variety of project-level commands. Completely inspired by git\'s interface.\n\n## Global Commands\n\n- `help` display a help page with all available commands\n- `create <directory> [<id> [<name>]]` create a new cordova project with optional name and id (package name, reverse-domain style)\n\n<a name="project_commands" />\n## Project Commands\n\n- `platform [ls | list]` list all platforms for which the project will build\n- `platform add <platform> [<platform> ...]` add one (or more) platforms as a build target for the project\n- `platform [rm | remove] <platform> [<platform> ...]` removes one (or more) platform build targets from the project\n- `platform [up | update] <platform> ` - updates the Cordova version used for the given platform\n- `plugin [ls | list]` list all plugins included in the project\n- `plugin add <path-to-plugin> [<path-to-plugin> ...]` add one (or more) plugins to the project\n- `plugin [rm | remove] <plugin-name> [<plugin-name> ...]` remove one (or more) plugins from the project.\n- `plugin search [<keyword1> <keyword2> ...]` search the plugin registry for plugins matching the list of keywords\n- `prepare [platform...]` copies files into the specified platforms, or all platforms. It is then ready for building by `Eclipse`, `Xcode`, etc.\n- `compile [platform...]` compiles the app into a binary for each targetted platform. With no parameters, builds for all platforms, otherwise builds for the specified platforms.\n- `build [<platform> [<platform> [...]]]` an alias for `cordova prepare` followed by `cordova compile`\n- `emulate [<platform> [<platform> [...]]]` launch emulators and deploy app to them. With no parameters emulates for all platforms added to the project, otherwise emulates for the specified platforms\n- `serve [port]` launch a local web server allowing you to access each  platform\'s www directory on the given port (default 8000).\n\n### Optional Flags\n\n- `-d` or `--verbose` will pipe out more verbose output to your shell. You can also subscribe to `log` and `warn` events if you are consuming `cordova-cli` as a node module by calling `cordova.on(\'log\', function() {})` or `cordova.on(\'warn\', function() {})`.\n- `-v` or `--version` will print out the version of your `cordova-cli` install.\n\n# Project Directory Structure\nA Cordova application built with `cordova-cli` will have the following directory structure:\n\n    myApp/\n    |-- config.xml\n    |-- hooks/\n    |-- merges/\n    | | |-- android/\n    | | |-- blackberry10/\n    | | `-- ios/\n    |-- www/\n    |-- platforms/\n    | |-- android/\n    | |-- blackberry10/\n    | `-- ios/\n    `-- plugins/\n\n## hooks/\nThis directory may contains scripts used to customize cordova commands. This\ndirectory used to exist at `.cordova/hooks`, but has now been moved to the\nproject root. Any scripts you add to these directories will be executed before\nand after the commands corresponding to the directory name. Useful for\nintegrating your own build systems or integrating with version control systems.\n\nRefer to [hooks-README.md](https://github.com/apache/cordova-lib/blob/master/cordova-lib/templates/hooks-README.md) for more information.\n\n## merges/\nPlatform-specific web assets (HTML, CSS and JavaScript files) are contained within appropriate subfolders in this directory. These are deployed during a `prepare` to the appropriate native directory.  Files placed under `merges/` will override matching files in the `www/` folder for the relevant platform. A quick example, assuming a project structure of:\n\n    merges/\n    |-- ios/\n    | `-- app.js\n    |-- android/\n    | `-- android.js\n    www/\n    `-- app.js\n\nAfter building the Android and iOS projects, the Android application will contain both `app.js` and `android.js`. However, the iOS application will only contain an `app.js`, and it will be the one from `merges/ios/app.js`, overriding the "common" `app.js` located inside `www/`.\n\n## www/\n\nContains the project\'s web artifacts, such as .html, .css and .js files. These are your main application assets. They will be copied on a `cordova prepare` to each platform\'s www directory.\n\n### Your Blanket: config.xml\n\nThis file is what you should be editing to modify your application\'s metadata. Any time you run any cordova-cli commands, the tool will look at the contents of `config.xml` and use all relevant info from this file to define native application information. cordova-cli supports changing your application\'s data via the following elements inside the `config.xml` file:\n\n- The user-facing name can be modified via the contents of the `<name>` element.\n- The package name (AKA bundle identifier or application id) can be modified via the `id` attribute from the top-level `<widget>` element.\n- The version can be modified via the `version` attribute from the top-level `<widget>` element.\n- The whitelist can be modified using the `<access>` elements. Make sure the `origin` attribute of your `<access>` element points to a valid URL (you can use `*` as wildcard). For more information on the whitelisting syntax, see the [docs.phonegap.com](http://docs.phonegap.com/en/2.2.0/guide_whitelist_index.md.html#Domain%20Whitelist%20Guide). You can use either attribute `uri` ([BlackBerry-proprietary](https://developer.blackberry.com/html5/documentation/access_element_834677_11.html)) or `origin` ([standards-compliant](http://www.w3.org/TR/widgets-access/#attributes)) to denote the domain.\n- Platform-specific preferences can be customized via `<preference>` tags. See [docs.phonegap.com](http://docs.phonegap.com/en/2.3.0/guide_project-settings_index.md.html#Project%20Settings) for a list of preferences you can use.\n- The entry/start page for your application can be defined via the `<content src>` element + attribute.\n\n## platforms/\nPlatforms added to your application will have the native application project structures laid out within this directory.\n\n## plugins/\nAny added plugins will be extracted or copied into this directory.\n\n# Hooks\n\nProjects created by cordova-cli have `before` and `after` hooks for each [project command](#project_commands).\n\nThere are two types of hooks: project-specific ones and module-level ones. Both of these types of hooks receive the project root folder as a parameter.\n\n## Project-specific Hooks\n\nThese are located under the `hooks` directory in the root of your cordova project. Any scripts you add to these directories will be executed before and after the appropriate commands. Useful for integrating your own build systems or integrating with version control systems. __Remember__: make your scripts executable.\n\n### Examples\n\n- [`before_build` hook for jade template compiling](https://gist.github.com/4100866) courtesy of [dpogue](http://github.com/dpogue)\n\n## Module-level Hooks\n\nIf you are using cordova-cli as a module within a larger **Node** application, you can also use the standard `EventEmitter` methods to attach to the events. The events include `before_build`, `before_compile`, `before_docs`, `before_emulate`, `before_run`, `before_platform_add`, `before_library_download`, `before_platform_ls`, `before_platform_rm`, `before_plugin_add`, `before_plugin_ls`, `before_plugin_rm` and `before_prepare`. There is also a `library_download` progress event. Additionally, there are `after_` flavours of all the above events.\n\nOnce you `require(\'cordova\')` in your Node project, you will have the usual `EventEmitter` methods available (`on`, `off` or `removeListener`, `removeAllListeners`, and `emit` or `trigger`).\n\n# Examples\n\n## Creating a new cordova project\nThis example shows how to create a project from scratch named KewlApp with iOS and Android platform support, and includes a plugin named Kewlio. The project will live in ~/KewlApp\n\n    cordova create ~/KewlApp KewlApp\n    cd ~/KewlApp\n    cordova platform add ios android\n    cordova plugin add http://example.org/Kewlio-1.2.3.tar.gz\n    cordova build\n\nThe directory structure of KewlApp now looks like this:\n\n    KewlApp/\n    |-- hooks/\n    |-- merges/\n    | |-- android/\n    | `-- ios/\n    |-- www/\n    | `-- index.html\n    |-- platforms/\n    | |-- android/\n    | | `-- …\n    | `-- ios/\n    |   `-- …\n    `-- plugins/\n      `-- Kewlio/\n\n# Contributing\n\n## Running Tests\n\n    npm test\n\n## TO-DO + Issues\n\nPlease check [Cordova issues with the CLI Component](http://issues.cordova.io). If you find issues with this tool, please be so kind as to include relevant information needed to debug issues such as:\n\n- Your operating system and version\n- The application name, directory location, and identifier used with `create`\n- Which mobile SDKs you have installed, and their versions. Related to this: which `Xcode` version if you are submitting issues related to iOS\n- Any error stack traces you received\n\n## Contributors\n\nThanks to everyone for contributing! For a list of people involved, please see the `package.json` file.\n\n\n# Known Issues and Troubleshooting\n\n## Any OS\n\n### Proxy Settings\n\n`cordova-cli` will use `npm`\'s proxy settings. If you downloaded cordova-cli via `npm` and are behind a proxy, chances are cordova-cli should work for you as it will use those settings in the first place. Make sure that the `https-proxy` and `proxy` npm config variables are set properly. See [npm\'s configuration documentation](https://npmjs.org/doc/config.html) for more information.\n\n## Windows\n\n### Trouble Adding Android as a Platform\n\nWhen trying to add a platform on a Windows machine if you run into the following error message:\n    cordova library for "android" already exists. No need to download. Continuing.\n    Checking if platform "android" passes minimum requirements...\n    Checking Android requirements...\n    Running "android list target" (output to follow)\n\n    Error: The command `android` failed. Make sure you have the latest Android SDK installed, and the `android` command (inside the tools/ folder) added t\n    o your path. Output:\n    at C:\\Users\\me\\AppData\\Roaming\\npm\\node_modules\\cordova\\src\\platform.js:185:42\n    at C:\\Users\\me\\AppData\\Roaming\\npm\\node_modules\\cordova\\src\\metadata\\android_parser.js:50:13\n    at C:\\Users\\me\\AppData\\Roaming\\npm\\node_modules\\cordova\\node_modules\\shelljs\\shell.js:1707:7\n    at exithandler (child_process.js:633:7)\n    at ChildProcess.errorhandler (child_process.js:649:5)\n    at ChildProcess.EventEmitter.emit (events.js:95:17)\n    at Process.ChildProcess._handle.onexit (child_process.js:787:12)\n\nrun the command `android list target`.  If you see:\n\n    \'xcopy\' is not recognized as an internal or external command,\n    operable program or batch file.\n\nat the beginning of the command output, it means you will need to fix your Windows Path variable to include xcopy. This location is typically under C:\\Windows\\System32.\n\n## Windows 8\n\nWindows 8 support does not include the ability to launch/run/emulate, so you will need to open **Visual Studio** to see your app live.  You are still able to use the following commands with windows8:\n\n- `platform add windows8`\n- `platform remove windows8`\n- `prepare windows8`\n- `compile windows8`\n- `build windows8`\n\nTo run your app, you will need to open the `.sln` in the `platforms/windows8` folder using **Visual Studio 2012**.\n\n**Visual Studio** will tell you to reload the project if you run any of the above commands while the project is loaded.\n\n## Amazon Fire OS\n\nAmazon Fire OS does not include the ability to emulate. You are still able to use the following commands with Amazon Fire OS\n\n- `platform add amazon-fireos`\n- `platform remove amazon-fireos`\n- `prepare amazon-fireos`\n- `compile amazon-fireos`\n- `build amazon-fireos`\n\n## Ubuntu\n\nThe initial release of cordova-ubuntu does not support building applications for armhf devices automatically. It is possible to produce applications and click packages in a few steps though.\n\nThis bug report documents the issue and solutions for it: https://bugs.launchpad.net/ubuntu/+source/cordova-ubuntu/+bug/1260500 A future release will let developers cross-compile armhf click packages directly from an x86 desktop.\n\n## Firefox OS\n\nFirefox OS does not include the ability to emulate, run and serve. After building, you will have to open the firefoxos platform directory of your app in the App Manager that comes with every firefox browser. \n',
70 silly resolved     readmeFilename: 'README.md',
70 silly resolved     _id: 'cordova@4.1.3-nightly.2014.10.21',
70 silly resolved     _shasum: '7bcaa450fb91cbe3291dbc8fe1ae64ec9412474b',
70 silly resolved     _from: 'cordova@4.1.3-nightly.2014.10.21',
70 silly resolved     _resolved: 'https://registry.npmjs.org/cordova/-/cordova-4.1.3-nightly.2014.10.21.tgz' } ]
71 info install cordova@4.1.3-nightly.2014.10.21 into /usr/local/lib
72 info installOne cordova@4.1.3-nightly.2014.10.21
73 info /usr/local/lib/node_modules/cordova unbuild
74 info preuninstall ionic@1.2.14-beta2
75 info uninstall ionic@1.2.14-beta2
76 verbose true,/usr/local/lib/node_modules,/usr/local/lib/node_modules unbuild ionic@1.2.14-beta2
77 verbose /usr/local/bin,[object Object] binRoot
78 info preuninstall cordova@3.6.3-0.2.13
79 info uninstall cordova@3.6.3-0.2.13
80 verbose true,/usr/local/lib/node_modules,/usr/local/lib/node_modules unbuild cordova@3.6.3-0.2.13
81 verbose /usr/local/bin,[object Object] binRoot
82 info postuninstall cordova@3.6.3-0.2.13
83 info /usr/local/lib/node_modules/cordova unbuild
84 info preuninstall cordova@3.6.3-0.2.13
85 info uninstall cordova@3.6.3-0.2.13
86 verbose true,/usr/local/lib/node_modules,/usr/local/lib/node_modules unbuild cordova@3.6.3-0.2.13
87 verbose /usr/local/bin,[object Object] binRoot
88 info postuninstall cordova@3.6.3-0.2.13
89 error error rolling back Error: EACCES, unlink '/usr/local/lib/node_modules/cordova/.npmignore'
89 error error rolling back  cordova@4.1.3-nightly.2014.10.21 { [Error: EACCES, unlink '/usr/local/lib/node_modules/cordova/.npmignore']
89 error error rolling back   errno: 3,
89 error error rolling back   code: 'EACCES',
89 error error rolling back   path: '/usr/local/lib/node_modules/cordova/.npmignore' }
90 error Error: EACCES, unlink '/usr/local/lib/node_modules/cordova/.npmignore'
90 error  { [Error: EACCES, unlink '/usr/local/lib/node_modules/cordova/.npmignore']
90 error   errno: 3,
90 error   code: 'EACCES',
90 error   path: '/usr/local/lib/node_modules/cordova/.npmignore' }
91 error Please try running this command again as root/Administrator.
92 error System Darwin 14.0.0
93 error command "node" "/usr/local/bin/npm" "update" "-g" "cordova" "ionic"
94 error cwd /Users/vasanthsanil/Documents/workspace/iRecall
95 error node -v v0.10.26
96 error npm -v 1.4.7
97 error path /usr/local/lib/node_modules/cordova/.npmignore
98 error code EACCES
99 error errno 3
100 error stack Error: EACCES, unlink '/usr/local/lib/node_modules/cordova/.npmignore'
101 verbose exit [ 3, true ]
